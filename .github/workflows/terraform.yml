name: 'Terraform CI'

on:
  push:
    branches:
    - main
    - icrisat007-dev1
#    paths:
#    - 'examples/**'

  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

#    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./examples    ########################please chnage folder name as per github repo####################

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks


  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./examples  ########################please chnage folder name as per github repo####################
    needs: terraform
    environment:
      name: tf_apply  ########################please set environment secret in github repo settings and change name accordingly####################
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Apply
        run: terraform apply
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
